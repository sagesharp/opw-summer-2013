xHCI OPW internship proposal
----------------------------

Currently, to enable xHCI debugging, the user must recompile their
kernel with CONFIG_USB_XHCI_HCD_DEBUGGING turned on.  This is
inconvenient when working with bug reporters, since it is a pain for
them to recompile their kernel, especially if it is a Linux distro
kernel.

The configuration option was originally put in because that's what other
kernel drivers did.  Since 2009 when the driver went in, the kernel
infrastructure has changed to include several options for dynamic
debugging that do not require recompiling your kernel.

The first is CONFIG_DYNAMIC_DEBUG.  Allows the user to dynamically
choose which printk or dev_dbg statements are enabled at runtime.  By
default, all statements should be turned off.  The user can dynamically
enable debugging for a particular driver file, or even per line in a
driver file.

This should currently work with the xHCI driver, but it does not.  When
CONFIG_DYNAMIC_DEBUG and CONFIG_USB_XHCI_HCD_DEBUGGING are turned on,
the driver prints debugging to dmesg by default.  It should not do so
until the user enables it.  One hypothesis is that the xhci_dbg macro is
confusing the dynamic debug system, and we just need to change xhci_dbg
(and friends) to dev_dbg.  Then we can have dynamic debugging.

One step further would be to add trace events to the xHCI driver.  Trace
events are a light weight way of adding dynamic debugging to the driver
with minimum performance impact.  Minimizing performance impact is
vital, since much of the xHCI code executes in interrupt context.

Trace events also allow the user to enable only specific trace events.
Often during xHCI debugging, we're only interested in specific events,
and wading through the entire xHCI debugging output is tedious.  The
first pass would be to work with Sarah Sharp to identify different types
of xHCI events that would be useful to break out.  For example, breaking
out events for different xHCI commands would be good, as well as
breaking out a trace event for xHCI transfer errors.

Documentation
-------------

Dynamic debugging documentation: Documentation/dynamic-debug-howto.txt

LWN articles on trace events:
http://lwn.net/Articles/387172/
http://lwn.net/Articles/379903/
http://lwn.net/Articles/381064/

Example of adding a tracepoint:
https://patchwork-mail.kernel.org/patch/2633001/
